"""
Link:
    https://projecteuler.net/problem=2

Problem:
    Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    By starting with 1 and 2, the first 10 terms will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four
    million, find the sum of the even-valued terms.
"""

# recursive fibonacci function
def fibo(x):
    if x == 0:
        return 0
    elif x == 1:
        return 1
    else:
        return fibo(x-1) + fibo(x-2)


if __name__ == "__main__":
    n = 0
    arr = list()

    while fibo(n) < 4_000_000:
        n = n + 1

        if fibo(n) % 2 == 0:
            arr.append(fibo(n))

    # result
    print(sum(arr))

